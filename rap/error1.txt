bbarthes@froment:~/M1S8/PMG/Draft-Projet/final/cbdlc/fichiers$ valgrind ./bin/atoms -v -s 0 -o 0 conf/choc1.conf 
==19154== Memcheck, a memory error detector
==19154== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==19154== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==19154== Command: ./bin/atoms -v -s 0 -o 0 conf/choc1.conf
==19154== 
[WARNING] Failed to get OpenCL platform IDs
[DEBUG] x: [-0.804762 [-0.200000, 16.733339] 17.338102]
[DEBUG] y: [-0.804762 [-0.200000, 16.733339] 17.338102]
[DEBUG] z: [-0.804762 [-0.200000, 16.733339] 17.338102]
[DEBUG] 30 x 30 x 30 = 27000 boxes
[INFO] Selected devices:
[INFO] 0: [Fake CPU Device (Fake Platform)] 	*** Output device ***
[INFO] 1 OpenCL platforms detected
[INFO] Platform 0: Fake Platform (Fake Vendor)
[INFO] --- Device 0 : CPU [Fake CPU Device] (mem size: 0.00GB, max wg: 0)
[INFO] Total #atoms: 1984
natoms: 1984
==19154== Conditional jump or move depends on uninitialised value(s)
==19154==    at 0x5A282F5: ??? (in /usr/lib/x86_64-linux-gnu/nvidia/current/libGL.so.331.67)
==19154==    by 0xBA80977: ???
==19154==    by 0xBA80977: ???
==19154== 
[INFO] force: 1
[INFO] move: 1
[INFO] force: 0
[INFO] force: 1
==19154== Invalid read of size 4
==19154==    at 0x4E434F0: squared_distance (seq.c:124)
==19154==    by 0x4E43FD5: seq_force_cube (seq.c:317)
==19154==    by 0x4E442D9: seq_force (seq.c:346)
==19154==    by 0x4E44319: seq_one_step_move (seq.c:362)
==19154==    by 0x4E3B680: device_one_step_move (device.c:383)
==19154==    by 0x4E42533: sotl_one_iteration (sotl.c:712)
==19154==    by 0x4E42579: sotl_one_step (sotl.c:723)
==19154==    by 0x4E46BBD: idle (window.c:199)
==19154==    by 0x6696659: glutMainLoop (in /usr/lib/x86_64-linux-gnu/libglut.so.3.9.0)
==19154==    by 0x4E474C1: window_main_loop (window.c:445)
==19154==    by 0x4E425C0: sotl_main_loop (sotl.c:734)
==19154==    by 0x401C80: main (main.c:235)
==19154==  Address 0xf63474fc is not stack'd, malloc'd or (recently) free'd
==19154== 
==19154== 
==19154== Process terminating with default action of signal 11 (SIGSEGV)
==19154==  Access not within mapped region at address 0xF63474FC
==19154==    at 0x4E434F0: squared_distance (seq.c:124)
==19154==    by 0x4E43FD5: seq_force_cube (seq.c:317)
==19154==    by 0x4E442D9: seq_force (seq.c:346)
==19154==    by 0x4E44319: seq_one_step_move (seq.c:362)
==19154==    by 0x4E3B680: device_one_step_move (device.c:383)
==19154==    by 0x4E42533: sotl_one_iteration (sotl.c:712)
==19154==    by 0x4E42579: sotl_one_step (sotl.c:723)
==19154==    by 0x4E46BBD: idle (window.c:199)
==19154==    by 0x6696659: glutMainLoop (in /usr/lib/x86_64-linux-gnu/libglut.so.3.9.0)
==19154==    by 0x4E474C1: window_main_loop (window.c:445)
==19154==    by 0x4E425C0: sotl_main_loop (sotl.c:734)
==19154==    by 0x401C80: main (main.c:235)
==19154==  If you believe this happened as a result of a stack
==19154==  overflow in your program's main thread (unlikely but
==19154==  possible), you can try to increase the size of the
==19154==  main thread stack using the --main-stacksize= flag.
==19154==  The main thread stack size used in this run was 8388608.
==19154== 
==19154== HEAP SUMMARY:
==19154==     in use at exit: 4,248,504 bytes in 1,668 blocks
==19154==   total heap usage: 13,242 allocs, 11,574 frees, 189,197,564 bytes allocated
==19154== 
==19154== LEAK SUMMARY:
==19154==    definitely lost: 18,592 bytes in 7 blocks
==19154==    indirectly lost: 150 bytes in 5 blocks
==19154==      possibly lost: 328,720 bytes in 25 blocks
==19154==    still reachable: 3,901,042 bytes in 1,631 blocks
==19154==         suppressed: 0 bytes in 0 blocks
==19154== Rerun with --leak-check=full to see details of leaked memory
==19154== 
==19154== For counts of detected and suppressed errors, rerun with: -v
==19154== Use --track-origins=yes to see where uninitialised values come from
==19154== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 2 from 2)
Erreur de segmentation

